{"version":3,"file":"mappedJS.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e404ff37c70317b68b9f","webpack:///plugin/src/js/Main.js","webpack:///external \"jQuery\"","webpack:///plugin/src/js/DataEnrichment.js","webpack:///plugin/src/js/Helper.js","webpack:///plugin/src/js/Point.js","webpack:///plugin/src/js/LatLng.js","webpack:///plugin/src/js/Bounds.js","webpack:///plugin/src/js/Interact.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"de\"] = factory(require(\"jQuery\"));\n\telse\n\t\troot[\"de\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e404ff37c70317b68b9f\n **/","import $ from 'jQuery';\nimport {TileMap} from './TileMap.js';\nimport {DataEnrichment} from './DataEnrichment.js';\nimport {Helper} from './Helper.js';\nimport {Interact} from './Interact.js';\nimport {Point} from './Point.js';\n\n/**\n * @author Michael Duve <mduve@designmail.net>\n * @file application initializes all instances and objects\n * @copyright Michael Duve 2016\n */\nexport class MappedJS {\n\n    /**\n     * @constructor\n     * @param  {string|Object} container=\".mjs\" - Container, either string, jQuery-object or dom-object\n     * @param  {string|Object} mapData={} - data of map tiles, can be json or path to file\n     * @param  {string|Object} markerData={} - data of markers, can be json or path to file\n     * @param  {Object} mapSettings={} - settings for map, must be json\n     * @param  {Object} events={loaded: \"mjs-loaded\"} - List of events\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    constructor({container=\".mjs\", mapData={}, markerData={}, mapSettings={}, events={loaded:\"mjs-loaded\"}} = {}) {\n        this.initializeSettings(container, events, mapSettings);\n\n        this.initializeData(mapData, (loadedMapData) => {\n            this.mapData = loadedMapData;\n            this.initializeData(markerData, (loadedMarkerData) => {\n                this.mapData = Object.assign(this.mapData, loadedMarkerData);\n                this.initializeMap();\n                this.addControls();\n                this.bindEvents();\n                this.loadingFinished();\n            });\n        });\n\n        this.momentum = null;\n        this.keyTicks = 0;\n\n        return this;\n    }\n\n    /**\n     * add controls (zoom, home) to DOM\n     */\n    addControls() {\n        if (this.mapSettings.controls) {\n            this.$controls = $(`<div class=\"control-container ${this.mapSettings.controls.theme} ${this.mapSettings.controls.position}\" />`);\n            this.$zoomIn = $(\"<div class='control zoom-in' />\");\n            this.$zoomOut = $(\"<div class='control zoom-out' />\");\n            this.$home = $(\"<div class='control home' />\");\n            this.$controls.append(this.$home).append(this.$zoomIn).append(this.$zoomOut);\n            this.$content.append(this.$controls);\n        }\n    }\n\n    /**\n     * initializes the settings and handles errors\n     * @param  {string|Object} container - Container, either string, jQuery-object or dom-object\n     * @param  {object} events - List of events\n     * @param  {object} settings - List of settings\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    initializeSettings(container, events = {}, settings = {}) {\n        this.$container = (typeof container === \"string\") ? $(container) : ((typeof container === \"object\" && container instanceof jQuery) ? container : $(container));\n        if (!(this.$container instanceof jQuery)) throw new Error(\"Container \" + container + \" not found\");\n\n        this.$container.addClass(\"mappedJS\");\n        this.$content = $(\"<div class='map-content' />\");\n        this.$container.append(this.$content);\n\n        this.mapSettings = DataEnrichment.mapSettings(settings);\n        this.events = events;\n\n        return this;\n    }\n\n    /**\n     * initializes the data, asynchronous\n     * @param  {Object} mapData - data of map tiles, can be json or path to file\n     * @param  {Helper~requestJSONCallback} cb - called, when data is received\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    initializeData(mapData, cb) {\n        if (typeof mapData === \"string\") {\n            Helper.requestJSON(mapData, (data) => {\n                cb(data);\n            });\n        } else {\n            cb((typeof mapData === \"object\") ? mapData : null);\n        }\n        return this;\n    }\n\n    /**\n     * initializes Map module\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    initializeMap() {\n        this.tileMap = new TileMap({\n            container: this.$content,\n            tilesData: this.mapData,\n            settings: this.mapSettings\n        });\n        return this;\n    }\n\n    /**\n     * get absolute position of a point\n     * @param  {Point} point - specified relative position\n     * @return {Point} absolute position to viewport\n     */\n    getAbsolutePosition(point) {\n        return point.clone.multiply(this.tileMap.view.viewport.width, this.tileMap.view.viewport.height);\n    }\n\n    /**\n     * initializes interaction\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    initializeInteractForMap() {\n        this.tooltipState = false;\n        this.interact = new Interact({\n            container: this.$content,\n            autoFireHold: 300,\n            overwriteViewportSettings: true,\n            callbacks: {\n                pan: (data) => {\n                    if ($(data.target).hasClass(\"control\")) {\n                        return false;\n                    }\n                    const change = data.last.position.clone.substract(data.position.move);\n                    this.moveView(this.getAbsolutePosition(change).multiply(-1, -1));\n                },\n                wheel: (data) => {\n                    const factor = data.delta / 4;\n                    this.zoom(factor, this.getAbsolutePosition(data.position.start));\n                },\n                pinch: (data) => {\n                    this.zoom(data.difference * 3, this.getAbsolutePosition(data.position.move));\n                },\n                doubletap: (data) => {\n                    if (!$(data.target).hasClass(\"marker-container\")) {\n                        return false;\n                    }\n                    this.zoom(0.2, this.getAbsolutePosition(data.position.start));\n                },\n                flick: (data) => {\n                    const direction = new Point(data.directions[0], data.directions[1]),\n                          velocity = direction.clone.divide(data.speed).multiply(20);\n                    this.momentumAccerlation(velocity);\n\n                }\n            }\n        });\n        return this;\n    }\n\n    /**\n     * binds all events to handlers\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    bindEvents() {\n\n        this.initializeInteractForMap();\n\n        $(window).on(\"resize orientationchange\", this.resizeHandler.bind(this));\n\n        $(document).on(\"keydown\", this.keyPress.bind(this));\n        $(document).on(\"keyup\", this.keyRelease.bind(this));\n\n        const gesture = Helper.isTouch() ? \"touchstart\": \"mousedown\";\n\n        this.$zoomIn.on(gesture, this.zoomInToCenter.bind(this));\n        this.$zoomOut.on(gesture, this.zoomOutToCenter.bind(this));\n        this.$home.on(gesture, this.resetToInitialState.bind(this));\n\n        return this;\n    }\n\n    /**\n     * resets map to initial state\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    resetToInitialState() {\n        this.tileMap.reset();\n        return this;\n    }\n\n    /**\n     * zooms into center of map\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    zoomInToCenter() {\n        this.zoom(0.1, this.tileMap.view.viewport.center);\n        return this;\n    }\n\n    /**\n     * zooms out of center of map\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    zoomOutToCenter() {\n        this.zoom(-0.1, this.tileMap.view.viewport.center);\n        return this;\n    }\n\n    /**\n     * Keypress handler\n     * @param  {object} e VanillaJS-Event-Object\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    keyPress(e) {\n        switch(e.keyCode) {\n            case 38: // up\n                this.handleMovementByKeys(new Point(0, 1));\n                break;\n            case 37: // left\n                this.handleMovementByKeys(new Point(1, 0));\n                break;\n            case 39: // right\n                this.handleMovementByKeys(new Point(-1, 0));\n                break;\n            case 40: // down\n                this.handleMovementByKeys(new Point(0, -1));\n                break;\n            case 187: // plus\n            case 107: // plus numpad\n                this.zoomInToCenter();\n                break;\n            case 189: // minus\n            case 109: // minus numpad\n                this.zoomOutToCenter();\n                break;\n            case 72: // home\n                this.resetToInitialState();\n                break;\n            default:\n                break;\n        }\n        this.tileMap.view.drawIsNeeded = true;\n        return this;\n    }\n\n    /**\n     * handles the translation of the map by keypress\n     * @param  {Point} direction - x,y point where to translate to\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    handleMovementByKeys(direction) {\n        this.keyTicks++;\n        this.tileMap.view.moveView(direction.multiply(this.keyTicks));\n        return this;\n    }\n\n    keyRelease() {\n        this.keyTicks = 0;\n    }\n\n    /**\n     * momentum flicking\n     * @param  {number} velocity - speed\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    momentumAccerlation(velocity) {\n        this.maxMomentumSteps = 30;\n        this.triggerMomentum(this.maxMomentumSteps, 10, velocity.multiply(-1));\n        return this;\n    }\n\n    /**\n     * recursive momentum handler\n     * @param  {number} steps - current step (decreasing)\n     * @param  {number} timing - time for step\n     * @param  {Point} change - distance\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    triggerMomentum(steps, timing, change) {\n        this.momentum = setTimeout(() => {\n            steps--;\n            const delta = Helper.easeOutQuadratic((this.maxMomentumSteps - steps) * timing, change, change.clone.multiply(-1), timing * this.maxMomentumSteps);\n            this.moveView(delta);\n            if (steps >= 0) this.triggerMomentum(steps, timing, change);\n        }, timing);\n        return this;\n    }\n\n    /**\n     * move by delta momentum\n     * @param  {Point} delta - delta of x/y\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    moveView(delta) {\n        this.tileMap.view.moveView(delta);\n        this.tileMap.view.drawIsNeeded = true;\n        return this;\n    }\n\n    /**\n     * handles zoom by factor and position\n     * @param  {number} factor - difference in zoom scale\n     * @param  {Point} position - position to zoom to\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    zoom(factor, position) {\n        if (factor !== 0) {\n            this.tileMap.view.zoom(factor, position);\n            this.tileMap.view.drawIsNeeded = true;\n        }\n        return this;\n    }\n\n    /**\n     * handles resizing of window\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    resizeHandler() {\n        this.tileMap.resize();\n        return this;\n    }\n\n    /**\n     * called when loading and initialization is finished\n     * @return {MappedJS} instance of MappedJS for chaining\n     */\n    loadingFinished() {\n        this.$container.trigger(this.events.loaded);\n        return this;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/Main.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jQuery\"\n ** module id = 1\n ** module chunks = 0\n **/","import $ from 'jQuery';\nimport {Helper} from './Helper.js';\nimport {Point} from './Point.js';\nimport {LatLng} from './LatLng.js';\nimport {Bounds} from './Bounds.js';\n\n/**\n * @author Michael Duve <mduve@designmail.net>\n * @file enriches delivered data with default values\n * @copyright Michael Duve 2016\n * @module DataEnrichment\n */\nexport var DataEnrichment = {\n    /**\n     * enriches marker data with all needed data\n     * @function\n     * @memberof module:DataEnrichment\n     * @param  {object} data - specified data for marker\n     * @return {object} enriched marker data\n     */\n    marker(data) {\n\n        const enrichedData = [];\n\n        Helper.forEach(data, (entry) => {\n            entry = Object.assign(DataEnrichment.DATA_MARKER, entry);\n\n            const offset = new Point(entry.offset.x, entry.offset.y),\n                  latlng = new LatLng(entry.position.lat, entry.position.lng),\n                  size = new Point(entry.size.width, entry.size.height);\n\n            enrichedData.push({\n                offset: offset,\n                latlng: latlng,\n                size: size,\n                hover: entry.hover,\n                icon: entry.icon,\n                content: entry.content\n            });\n        });\n\n        return enrichedData;\n    },\n    /**\n     * enriches map data with all needed data\n     * @function\n     * @memberof module:DataEnrichment\n     * @param  {object} data - specified data for mapsettings\n     * @return {object} enriched mapsettings data\n     */\n    mapSettings(data) {\n\n        const enrichedData = Object.assign(DataEnrichment.MAP_SETTINGS, data),\n              bounds = new Bounds(new LatLng(enrichedData.bounds.northWest[0], enrichedData.bounds.northWest[1]), new LatLng(enrichedData.bounds.southEast[0], enrichedData.bounds.southEast[1])),\n              center = new LatLng(enrichedData.center.lat, enrichedData.center.lng);\n\n        if (!enrichedData.limitToBounds) {\n            enrichedData.limitToBounds = bounds;\n        } else {\n            enrichedData.limitToBounds =  new Bounds(new LatLng(enrichedData.limitToBounds.northWest[0], enrichedData.limitToBounds.northWest[1]), new LatLng(enrichedData.limitToBounds.southEast[0], enrichedData.limitToBounds.southEast[1]));\n        }\n\n        enrichedData.bounds = bounds;\n        enrichedData.center = center;\n\n        return enrichedData;\n    }\n};\n\n/**\n * Default initial values for a Marker\n * @type {Object}\n */\nDataEnrichment.DATA_MARKER = {\n    icon: null,\n    hover: false,\n    position: {\n        lat: 0,\n        lng: 0\n    },\n    offset: {\n        x: 0,\n        y: 0\n    },\n    size: {\n        width: 32,\n        height: 32\n    },\n    content: []\n};\n/**\n * Default initial values for a Map\n * @type {Object}\n */\nDataEnrichment.MAP_SETTINGS = {\n    level: 0,\n    center: {\"lat\": 0, \"lng\": 0},\n    bounds: {\n        \"northWest\": [90, -180],\n        \"southEast\": [-90, 180]\n    },\n    controls: {\n        zoom: false,\n        home: false,\n        position: \"bottom-right\",\n        theme: \"dark\"\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/DataEnrichment.js\n **/","/**\n * @author Michael Duve <mduve@designmail.net>\n * @file Helper for general purposes\n * @copyright Michael Duve 2016\n * @module Helper\n */\nexport var Helper = {\n    /**\n     * request json-data from given file and calls callback on success\n     * @function\n     * @memberof module:Helper\n     * @param  {string} filename - path to file\n     * @param  {Helper~requestJSONCallback} callback - function called when data is loaded successfully\n     * @return {Helper} Helper object for chaining\n     */\n    requestJSON(filename, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                if (xhr.status === 200) {\n                    if (callback) callback(JSON.parse(xhr.responseText));\n                } else {\n                    throw new Error(\"The JSON submitted seems not valid\", xhr);\n                }\n            }\n        };\n        xhr.open(\"GET\", filename, true);\n        xhr.send();\n        return this;\n    },\n    /**\n     * loads an image and calls callback on success\n     * @function\n     * @memberof module:Helper\n     * @param {requestCallback} cb - callback-function on success\n     * @return {Helper} Helper object for chaining\n     */\n    loadImage(path, cb) {\n        const img = new Image();\n        img.onload = function() {\n            if (cb && typeof cb === \"function\") cb(img);\n        };\n        img.src = path;\n        return this;\n    },\n    /**\n     * for each helper\n     * @function\n     * @memberof module:Helper\n     * @param  {Object[]} a - array to iterate over each value\n     * @param  {requestCallback} cb - callback for each object\n     * @return {Helper} Helper object for chaining\n     */\n    forEach(a, cb) {\n        for (const i in a) {\n            if (a[i] && typeof cb === \"function\") cb(a[i], i);\n        }\n        return this;\n    },\n    /**\n     * formula for quadratic ease out\n     * @function\n     * @memberof module:Helper\n     * @param  {number} t - current time\n     * @param  {Point} b - start value\n     * @param  {Point} c - total difference to start\n     * @param  {number} d - duration\n     * @return {number} quadratic value at specific time\n     */\n    easeOutQuadratic(t, b, c, d) {\n\t    t /= d;\n        return c.clone.multiply(-1 * t * (t-2)).add(b);\n    },\n    /**\n     * convert degree to radian\n     * @function\n     * @memberof module:Helper\n     * @param {number} degrees - specified degrees\n     * @return {number} converted radian\n     */\n    toRadians: degrees => degrees * Math.PI / 180,\n    /**\n     * checks if mouse is possible\n     * @function\n     * @memberof module:Helper\n     * @return {Boolean} if true, mouse is possible\n     */\n    isMouse: () => ('onmousedown' in window),\n\n    /**\n     * checks if touch is possible\n     * @function\n     * @memberof module:Helper\n     * @return {Boolean} if true, touch is possible\n     */\n    isTouch: () => (('ontouchstart' in window) || (navigator.MaxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)),\n\n    /**\n     * checks if IE is used\n     * @function\n     * @memberof module:Helper\n     * @return {Boolean} if true, IE is used\n     */\n    isIE: () => ((navigator.MaxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)),\n\n    /**\n     * gets cross-browser scroll-event\n     * @function\n     * @memberof module:Helper\n     * @return {string} name of scroll event\n     */\n    scrollEvent: () => \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : document.onmousewheel !== undefined ? \"mousewheel\" : \"DOMMouseScroll\"\n};\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/Helper.js\n **/","/**\n * @author Michael Duve <mduve@designmail.net>\n * @file represents a point with x and y value\n * @copyright Michael Duve 2016\n */\nexport class Point {\n\n    /**\n     * length of a point\n     * @return {number} length of a point\n     */\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n\n    /**\n     * gets a clone of this point\n     * @return {Point} new instance equals this point\n     */\n    get clone() {\n        return Point.createFromPoint(this);\n    }\n\n    /**\n     * gets absolute Point\n     * @return {Point} returns Point with absolute values\n     */\n    get abs() {\n        return new Point(Math.abs(this.x), Math.abs(this.y));\n    }\n\n    /**\n     * @constructor\n     * @param  {number} x = 0 - representation of x coordinate\n     * @param  {number} y = 0 - representation of y coordinate\n     * @return {Point} instance of Point for chaining\n     */\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * substracts 2 points\n     * @param  {Point} point = new Point() - the point to substract from this\n     * @return {Point} instance of Point for chaining\n     */\n    substract(point = new Point()) {\n        this.x -= point.x;\n        this.y -= point.y;\n        return this;\n    }\n\n    /**\n     * adds 2 points\n     * @param  {Point} point = new Point() - the point to add to this\n     * @return {Point} instance of Point for chaining\n     */\n    add(point = new Point()) {\n        this.x += point.x;\n        this.y += point.y;\n        return this;\n    }\n\n    /**\n     * multiplicates a point with a given x and y\n     * @param  {number} x = 1 - factor to multiplicate x with\n     * @param  {number} y = x - factor to multiplicate y with\n     * @return {Point} instance of Point for chaining\n     */\n    multiply(x = 1, y = x) {\n        this.x *= x;\n        this.y *= y;\n        return this;\n    }\n\n    /**\n     * divide a point with a given x and y\n     * @param  {number} x = 1 - factor to divide x with\n     * @param  {number} y = x - factor to divide y with\n     * @return {Point} instance of Point for chaining\n     */\n    divide(x = 1, y = x) {\n        this.x /= x;\n        this.y /= y;\n        return this;\n    }\n\n    /**\n     * check if points are equal\n     * @param  {Point} point - the point to check against this\n     * @return {Boolean} is true, if x and y are the same\n     */\n    equals(point) {\n        return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Returns the distance from this Point to a specified Point\n     * @param  {Point} point = new Point() - the specified point to be measured against this Point\n     * @return {Point} the distance between this Point and specified point\n     */\n    distance(point = new Point()) {\n        return this.clone.substract(point).length;\n    }\n\n    /**\n     * translates a point by x and y\n     * @param  {number} x = 0 - value to move x\n     * @param  {number} y = x - value to move y\n     * @return {Point} instance of Point for chaining\n     */\n    translate(x = 0, y = x) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n\n    /**\n     * positions a point by x and y\n     * @param  {number} x = 0 - value to position x\n     * @param  {number} y = x - value to position y\n     * @return {Point} instance of Point for chaining\n     */\n    position(x = 0, y = x) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * translates a Point to an array\n     * @return {Array} Returns Point as Array(x, y)\n     */\n    toArray() {\n        return [this.x, this.y];\n    }\n\n}\n\n/**\n * Creates a Point from specified point\n * @param  {Point} point - specified point\n * @return {Point} the point specified\n */\nPoint.createFromPoint = (point) => new Point(point.x, point.y);\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/Point.js\n **/","/**\n * @author Michael Duve <mduve@designmail.net>\n * @file represents latitude and longitude coordinates in a geographic coordinate system\n * @copyright Michael Duve 2016\n */\nexport class LatLng {\n\n    /**\n     * length of a latlng\n     * @return {number} length of a latlng\n     */\n    get length() {\n        return Math.sqrt(Math.pow(this.lat, 2) + Math.pow(this.lng, 2));\n    }\n\n    /**\n     * gets a clone of this latlng\n     * @return {LatLng} create a copy\n     */\n    get clone() {\n        return LatLng.createFromLatLng(this);\n    }\n\n    /**\n     * @constructor\n     * @param  {number} lat = 0 - representation of latitude\n     * @param  {number} lng = 0 - representation of longitude\n     * @return {LatLng} instance of LatLng for chaining\n     */\n    constructor(lat = 0, lng = 0) {\n        this.lat = lat;\n        this.lng = lng;\n        return this;\n    }\n\n    /**\n     * substract specified coord from this coordinate\n     * @param  {LatLng} coord = new LatLng() - specified coordinate to substract from this coord\n     * @return {LatLng} instance of LatLng for chaining\n     */\n    substract(coord = new LatLng()) {\n        this.lat -= coord.lat;\n        this.lng -= coord.lng;\n        return this;\n    }\n\n    /**\n     * add specified coord to this coordinate\n     * @param  {LatLng} coord = new LatLng() - specified coordinate to add to this coord\n     * @return {LatLng} instance of LatLng for chaining\n     */\n    add(coord = new LatLng()) {\n        this.lat += coord.lat;\n        this.lng += coord.lng;\n        return this;\n    }\n\n    /**\n    * divides a latlng with a given factor\n    * @param  {number} factorLat = 1 - factor to divide lat with\n    * @param  {number} factorLng = factorLat - factor to divide lng with\n    * @return {LatLng} instance of LatLng for chaining\n    */\n    divide(factorLat = 1, factorLng = factorLat) {\n        this.lat /= factorLat;\n        this.lng /= factorLng;\n        return this;\n    }\n\n    /**\n     * multiplicates a latlng with a given factor\n     * @param  {number} factorLat = 1 - factor to multiplicate lat with\n     * @param  {number} factorLng = factorLat - factor to multiplicate lng with\n     * @return {LatLng} instance of LatLng for chaining\n     */\n    multiply(factorLat = 1, factorLng = factorLat) {\n        this.lat *= factorLat;\n        this.lng *= factorLng;\n        return this;\n    }\n\n    /**\n     * checks if specified coord equals this coord\n     * @param  {LatLng} coord - specified coord to check against\n     * @return {Boolean} Returns if specified coord equals this coord\n     */\n    equals(coord) {\n        return this.lat === coord.lat && this.lng === coord.lng;\n    }\n\n    /**\n     * converts a LatLng to string\n     * @return {string} representing LatLng\n     */\n    toString() {\n        return `(${this.lat}, ${this.lng})`;\n    }\n\n}\n\n/**\n * Creates a LatLng from specified LatLng\n * @param  {LatLng} LatLng - specified LatLng\n * @return {LatLng} the LatLng specified\n */\nLatLng.createFromLatLng = (latlng) => new LatLng(latlng.lat, latlng.lng);\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/LatLng.js\n **/","import {LatLng} from './LatLng.js';\n\n/**\n * @author Michael Duve <mduve@designmail.net>\n * @file represents boundaries of a geographic coordinate system\n * @copyright Michael Duve 2016\n */\nexport class Bounds {\n\n    /**\n     * get width of boundaries\n     * @return {number} distance between east and west boundary\n     */\n    get width() {\n        return Math.abs(this.se.lng - this.nw.lng);\n    }\n\n    /**\n     * get height of boundaries\n     * @return {number} distance between north and south boundary\n     */\n    get height() {\n        return Math.abs(this.se.lat - this.nw.lat);\n    }\n\n    /**\n<<<<<<< HEAD\n     * @constructor\n=======\n     * Constructor\n>>>>>>> cef61a4e7f38825fcdfe66914b46cc3a03472a68\n     * @param  {number} northWest = new LatLng() - representation of northWest boundary\n     * @param  {number} southEast = new LatLng() - representation of southEast boundary\n     * @return {Bounds} instance of Bounds for chaining\n     */\n    constructor(northWest = new LatLng(), southEast = new LatLng()) {\n        if (northWest.lat < southEast.lat || northWest.lng > southEast.lng) throw new Error(`${northWest} needs to be top-right corner and ${southEast} bottom-left`);\n        this.nw = northWest;\n        this.se = southEast;\n        return this;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/Bounds.js\n **/","/*global PointerEvent,MSPointerEvent*/\nimport $ from 'jQuery';\nimport {Point} from './Point.js';\nimport {Helper} from './Helper.js';\n\n/**\n * @author Michael Duve <mduve@designmail.net>\n * @file implements interaction like panning, zooming, flicking and more, cross-browser and cross-device\n * @copyright Michael Duve 2016\n */\nexport class Interact {\n    /**\n     * get time difference to last\n     * @return {number} difference\n     */\n    get timeToLastMove() {\n        return this.data.time.end - this.data.time.last;\n    }\n\n    /**\n     * get time difference to start\n     * @return {number} difference\n     */\n    get time() {\n        return this.data.time.end - this.data.time.start;\n    }\n\n    /**\n     * clones the data object\n     * @return {Object} data object\n     */\n    get dataClone() {\n        return $(this.data)[0];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} settings = {} - all the settings\n     * @param {string|Object} settings.container = \".interact-container\" - Container, either string, jQuery-object or dom-object\n     * @param {Object} settings.timeTreshold = {} - settings for the timing tresholds\n     * @param {number} settings.timeTreshold.tap = 200 - timing treshold for tap\n     * @param {number} settings.timeTreshold.hold = 500 - timing treshold for hold\n     * @param {number} settings.timeTreshold.swipe = 300 - timing treshold for swipe\n     * @param {number} settings.timeTreshold.flick = 30 - timing treshold for flick\n     * @param {Object} settings.distanceTreshold = {} - settings for the distance tresholds\n     * @param {number} settings.distanceTreshold.swipe = 200 - distance treshold for swipe\n     * @param {Boolean|string} settings.overwriteViewportSettings = false - on true prevents pinching, can be a custom string too\n     * @param {Boolean} settings.stopPropagation = true - on true stops the propagation of events\n     * @param {Boolean} settings.preventDefault = true - on true prevents the default actions of events\n     * @param {Boolean} settings.autoFireHold = false - if set to false hold-event is not fired\n     * @param {number} settings.pinchBalanceTime = 50 - prevents from firing too much pinching events\n     * @param {Object} settings.callbacks = {} - settings for the callback-functions\n     * @param {function} settings.callbacks.tap = null - callback-function for tap\n     * @param {function} settings.callbacks.tapHold = null - callback-function for tapHold\n     * @param {function} settings.callbacks.doubletap = null - callback-function for doubletap\n     * @param {function} settings.callbacks.hold = null - callback-function for hold\n     * @param {function} settings.callbacks.pan = null - callback-function for pan\n     * @param {function} settings.callbacks.swipe = null - callback-function for swipe\n     * @param {function} settings.callbacks.flick = null - callback-function for flick\n     * @param {function} settings.callbacks.zoom = null - callback-function for zoom\n     * @param {function} settings.callbacks.wheel = null - callback-function for wheel\n     * @param {function} settings.callbacks.pinch = null - callback-function for pinch\n     * @param {Object} settings.events = {} - settings all eventnames\n     * @param {Object} settings.events.start = {} - settings all start eventnames\n     * @param {Object} settings.events.start.touch = (\"MSPointerDown pointerdown\" || \"touchstart\") - settings start touch eventnames\n     * @param {Object} settings.events.start.mouse = (\"MSPointerDown pointerdown\" || \"mousedown\") - settings start mouse eventnames\n     * @param {Object} settings.events.move = {} - settings all move eventnames\n     * @param {Object} settings.events.move.touch = (\"MSPointerMove pointermove\" || \"touchmove\") - settings move touch eventnames\n     * @param {Object} settings.events.move.mouse = (\"MSPointerMove pointermove\" || \"mousemove\") - settings move mouse eventnames\n     * @param {Object} settings.events.end = {} - settings all end eventnames\n     * @param {Object} settings.events.end.touch = (\"MSPointerUp pointerup\" || \"touchend\") - settings end touch eventnames\n     * @param {Object} settings.events.end.mouse = (\"MSPointerUp pointerup\" || \"mouseup\") - settings end mouse eventnames\n     * @param {Object} settings.events.leave = {} - settings all leave eventnames\n     * @param {Object} settings.events.leave.touch = (\"MSPointerLeave pointerleave\" || \"touchleave\") - settings leave touch eventnames\n     * @param {Object} settings.events.leave.mouse = (\"MSPointerLeave pointerleave\" || \"mouseleave\") - settings leave mouse eventnames\n     * @param {string} settings.events.scroll = (\"wheel\" || \"mousewhell\" || \"DOMMouseScroll\") - settings all scroll eventnames\n     * @return {Interact} new instance\n     */\n    constructor(settings = {}) {\n        this.settings = Object.assign(this.getDefaultSettings(), settings);\n        this.data = this.getDefaultData();\n        if (this.settings.overwriteViewportSettings) this.handleViewport(this.settings.overwriteViewportSettings);\n        this.init(this.settings.container).bindEvents();\n    }\n\n    /**\n     * get the default settings\n     * @return {Object} settings\n     */\n    getDefaultSettings() {\n        return {\n            container: \".interact-container\",\n            timeTreshold: {\n                tap: 200,\n                hold: 500,\n                swipe: 300,\n                flick: 20\n            },\n            distanceTreshold: {\n                swipe: 200\n            },\n            speedThreshold: 0.01,\n            overwriteViewportSettings: false,\n            stopPropagation: true,\n            preventDefault: true,\n            autoFireHold: false,\n            pinchBalanceTime: 500,\n            callbacks: this.getDefaultCallbacks(),\n            events: this.getDefaultEventNames()\n        };\n    }\n\n    /**\n     * get default callbacks\n     * @return {Object} callbacks\n     */\n    getDefaultCallbacks() {\n        return {\n            tap: null,\n            tapHold: null,\n            doubletap: null,\n            hold: null,\n            pan: null,\n            swipe: null,\n            flick: null,\n            zoom: null,\n            wheel: null,\n            pinch: null\n        };\n    }\n\n    /**\n     * get default eventnames\n     * @return {Object} eventnames\n     */\n    getDefaultEventNames() {\n        const isIE = Helper.isIE();\n        return {\n            start: {\n                touch: (isIE) ? \"MSPointerDown pointerdown\" : \"touchstart\",\n                mouse: (isIE) ? \"MSPointerDown pointerdown\" : \"mousedown\"\n            },\n            move: {\n                touch: (isIE) ? \"MSPointerMove pointermove\" : \"touchmove\",\n                mouse: (isIE) ? \"MSPointerMove pointermove\" : \"mousemove\"\n            },\n            end: {\n                touch: (isIE) ? \"MSPointerUp pointerup\" : \"touchend\",\n                mouse: (isIE) ? \"MSPointerUp pointerup\" : \"mouseup\"\n            },\n            leave: {\n                touch: (isIE) ? \"MSPointerLeave pointerleave\" : \"touchleave\",\n                mouse: (isIE) ? \"MSPointerLeave pointerleave\" : \"mouseleave\"\n            },\n            scroll: Helper.scrollEvent()\n        };\n    }\n\n    /**\n     * get default data\n     * @return {Object} data\n     */\n    getDefaultData() {\n        return {\n            down: false,\n            moved: false,\n            pinched: false,\n            pointerArray: {},\n            multitouch: false,\n            distance: null,\n            directions: [],\n            zoom: 0,\n            difference: null,\n            target: null,\n            last: {\n                position: null,\n                distance: null,\n                action: null\n            },\n            position: {\n                start: null,\n                move: null,\n                end: null\n            },\n            time: {\n                start: null,\n                last: null,\n                end: null\n            },\n            timeout: {\n                hold: null,\n                default: null\n            }\n        };\n    }\n\n    /**\n     * handles the overwrite of viewport meta\n     * @param  {Boolean|string} viewport - specified viewport option\n     * @return {Interact} Returns this instance\n     */\n    handleViewport(viewport) {\n        if (typeof viewport !== \"string\") {\n            viewport = \"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no\";\n        }\n        const metaViewInHead = $(\"meta[name=viewport]\").length,\n              $viewportMeta = (metaViewInHead !== 0) ? $(\"meta[name=viewport]\") : $(\"head\").append($(\"<meta name='viewport' />\"));\n        $viewportMeta.attr(\"content\", viewport);\n        return this;\n    }\n\n    /**\n     * initializes class settings and bindings\n     * @param  {Object|string} container - Container, either string, jQuery-object or dom-object\n     * @return {Interact} Returns this instance\n     */\n    init(container) {\n        this.$container = (typeof container === \"string\") ? $(container) : ((typeof container === \"object\" && container instanceof jQuery) ? container : $(container));\n        if (!(this.$container instanceof jQuery)) throw new Error(\"Container \" + container + \" not found\");\n        const css = {\n            \"-ms-touch-action\": \"none\",\n            \"touch-action\": \"none\",\n            \"-ms-content-zooming\": \"none\"\n        };\n        this.$container.css(css);\n        this.$container.find(\"> *\").css(css);\n        this.container = this.$container[0];\n        return this;\n    }\n\n    /**\n     * binds all needed events\n     * @return {Interact} Returns this instance\n     */\n    bindEvents() {\n        if (Helper.isIE()) {\n            this.bindIEEvents();\n        } else {\n            if (Helper.isTouch()) this.bindTouchEvents();\n            if (Helper.isMouse()) this.bindMouseEvents();\n        }\n        return this;\n    }\n\n    /**\n     * binds all needed events for IE\n     * @return {Interact} Returns this instance\n     */\n    bindIEEvents() {\n        this.$container.on(this.settings.events.scroll, this.scrollHandler.bind(this));\n        this.bindTouchEvents();\n        this.container.addEventListener(\"contextmenu\", (e) => e.preventDefault(), false);\n        return this;\n    }\n\n    /**\n     * binds all needed events for touch devices\n     * @return {Interact} Returns this instance\n     */\n    bindTouchEvents() {\n        this.$container\n            .on(this.settings.events.start.touch, this.startHandler.bind(this))\n            .on(this.settings.events.move.touch, this.moveHandler.bind(this))\n            .on(this.settings.events.end.touch, this.endHandler.bind(this))\n            .on(this.settings.events.leave.touch, this.endHandler.bind(this));\n        return this;\n    }\n\n    /**\n     * binds all needed events for mouse devices\n     * @return {Interact} Returns this instance\n     */\n    bindMouseEvents() {\n        this.$container.on(this.settings.events.scroll, this.scrollHandler.bind(this))\n            .on(this.settings.events.start.mouse, this.startHandler.bind(this))\n            .on(this.settings.events.move.mouse, this.moveHandler.bind(this))\n            .on(this.settings.events.end.mouse, this.endHandler.bind(this))\n            .on(this.settings.events.leave.mouse, this.endHandler.bind(this));\n        return this;\n    }\n\n    /**\n     * pre handle all events\n     * @param  {Object} event - original event of Vanilla JS\n     * @return {Object} normalized jQuery-fixed event\n     */\n    preHandle(event) {\n        if (this.settings.stopPropagation) event.stopPropagation();\n        if (this.settings.preventDefault) event.preventDefault();\n        this.data.target = event.target;\n        return this.getEvent(event);\n    }\n\n    /**\n     * handles cross-browser and -device scroll\n     * @param  {Object} event - jQuery-Event-Object\n     * @return {Boolean} always returns false\n     */\n    scrollHandler(event) {\n        event = event || window.event;\n\n        const e = this.preHandle(event) || event.originalEvent;\n\n        this.data.delta = this.normalizeWheelDelta(event);\n        this.data.position.start = this.getRelativePosition(e);\n        this.data.directions = this.getScrollDirection(e);\n        this.data.zoom = (this.data.directions.indexOf(\"up\") > -1) ? 1 : (this.data.directions.indexOf(\"down\") > -1) ? -1 : 0;\n\n        if (this.settings.callbacks.wheel) {\n            this.eventCallback(this.settings.callbacks.wheel, this.dataClone);\n        }\n        if (this.settings.callbacks.zoom && (this.data.directions.indexOf(\"up\") > -1 || this.data.directions.indexOf(\"down\") > -1)) {\n            this.eventCallback(this.settings.callbacks.zoom, this.dataClone);\n        }\n        return false;\n    }\n\n    /**\n     *\n     * Solution from http://jsfiddle.net/uNeBr/\n     * @param  {Object} event - VanillaJS-Event-Object\n     * @return {number} normalized wheel delta\n     */\n    normalizeWheelDelta(e) {\n        const o = e.originalEvent,\n            w = o.wheelDelta || (o.deltaY * -1) * 10,\n            n = 225,\n            n1 = n-1;\n\n        let d = o.detail,\n            f;\n\n        // Normalize delta\n        d = d ? w && (f = w/d) ? d/f : -d/1.35 : w/120;\n        // Quadratic scale if |d| > 1\n        d = d < 1 ? d < -1 ? (-Math.pow(d, 2) - n1) / n : d : (Math.pow(d, 2) + n1) / n;\n        // Delta *should* not be greater than 2...\n        return Math.min(Math.max(d / 2, -1), 1);\n    }\n\n    /**\n     * check if event is a PointerEvent (IE)\n     * @param  {Object} event - original event of Vanilla JS\n     * @return {Boolean} Whether event is PointerEvent\n     */\n    isPointerEvent(e) {\n        return Helper.isIE() && (e instanceof MSPointerEvent || e instanceof PointerEvent);\n    }\n\n    /**\n     * calculation to be made at start-handler\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} calculated data\n     */\n    calculateStart(e) {\n        const data = {\n            multitouch: false,\n            distance: 0,\n            down: true,\n            position: {\n                start: new Point()\n            }\n        };\n        // mouse is used\n        if (e instanceof MouseEvent && !this.isPointerEvent(e)) {\n            return $.extend(true, data, this.handleSingletouchStart(e));\n        }\n        // if is pointerEvent\n        if (this.isPointerEvent(e)) {\n            return this.handlePointerEventStart(data, e);\n        } // touch is used\n        else { // singletouch startet\n            return this.handleTouchEventStart(data, e);\n        }\n    }\n\n    /**\n     * handle PointerEvent calculations\n     * @param  {Object} data - current data\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} manipulated enriched data\n     */\n    handlePointerEventStart(data, e) {\n        this.data.pointerArray[e.pointerId] = e;\n        const getData = (Object.keys(this.data.pointerArray).length <= 1) ? this.handleSingletouchStart(e) : this.handleMultitouchStart(this.getPointerArray());\n        return $.extend(true, data, getData);\n    }\n\n    /**\n     * handle TouchEvent calculations for start\n     * @param  {Object} data - current data\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} manipulated enriched data\n     */\n    handleTouchEventStart(data, e) {\n        return this.handleTouchEvent(data, e, this.handleSingletouchStart.bind(this), this.handleMultitouchStart.bind(this));\n    }\n\n    /**\n     * get array of pointers (IE)\n     * @return {Object} array of pointerIDs\n     */\n    getPointerArray() {\n        const pointerPos = [];\n        for (const pointer in this.data.pointerArray) {\n            if (this.data.pointerArray[pointer]) {\n                pointerPos.push(this.data.pointerArray[pointer]);\n            }\n        }\n        return pointerPos;\n    }\n\n    /**\n     * handles multitouch for start\n     * @param  {Object} positionsArray - array of positions\n     * @return {Object} manipulated enriched data\n     */\n    handleMultitouchStart(positionsArray) {\n        const pos1 = this.getRelativePosition(positionsArray[0]),\n              pos2 = this.getRelativePosition(positionsArray[1]);\n        return {\n            multitouch: true,\n            distance: pos1.distance(pos2),\n            position: {\n                start: pos1.add(pos2).divide(2, 2)\n            }\n        };\n    }\n\n    /**\n     * handles singletouch for start\n     * @param  {Point} position - position of touch\n     * @return {Object} manipulated enriched data\n     */\n    handleSingletouchStart(position) {\n        return {\n            position: {\n                start: this.getRelativePosition(position)\n            }\n        };\n    }\n\n    /**\n     * handle action at start event handler\n     * @param  {String} action - last action made\n     * @return {Interact} instance of Interact for chaining\n     */\n    takeActionStart(action) {\n        switch (action) {\n            case null:\n                this.data.last.action = \"tap\";\n                if (this.settings.autoFireHold) {\n                    this.setTimeoutForEvent(this.settings.callbacks.hold, this.settings.autoFireHold, this.dataClone, true);\n                }\n                break;\n            case \"tap\":\n                this.data.last.action = \"doubletap\";\n                if (this.settings.autoFireHold) {\n                    this.setTimeoutForEvent(this.settings.callbacks.tapHold, this.settings.autoFireHold, this.dataClone, true);\n                }\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n\n    /**\n     * handles cross-browser and -device start-event\n     * @param  {Object} event - jQuery-Event-Object\n     * @return {Boolean} always returns false\n     */\n    startHandler(event) {\n        if (event.button && event.button !== 0) {\n            return false;\n        }\n        const e = this.preHandle(event);\n        this.data.time.start = event.timeStamp;\n        this.clearTimeouts(this.data.timeout.default);\n        this.data = $.extend(true, this.data, this.calculateStart(e));\n        this.takeActionStart(this.data.last.action);\n        return false;\n    }\n\n    /**\n     * clear timeout helper\n     * @param  {Object} timeout - timeout object to be cleared\n     * @return {Interact} instance of Interact for chaining\n     */\n    clearTimeouts(timeout) {\n        if (timeout) {\n            timeout = clearTimeout(timeout);\n        }\n        return this;\n    }\n\n    /**\n     * calculation to be made at move-handler\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} calculated data\n     */\n    calculateMove(e) {\n        const data = {\n            moved: true,\n            last: {\n                action: \"moved\"\n            },\n            position: {\n                move: new Point()\n            }\n        };\n\n        if (e instanceof MouseEvent && !this.isPointerEvent(e)) {\n            return $.extend(true, data, this.handleSingletouchMove(e));\n        } // if is pointerEvent\n        if (this.isPointerEvent(e)) {\n            return this.handlePointerEventMove(data, e);\n        } // touch is used\n        else {\n            return this.handleTouchEventMove(data, e);\n        }\n    }\n\n    /**\n     * handle PointerEvent at moving (IE)\n     * @param  {Object} data - specified input data\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} manipulated enriched data\n     */\n    handlePointerEventMove(data, e) {\n        this.data.pointerArray[e.pointerId] = e;\n        if (Object.keys(this.data.pointerArray).length <= 1) {\n            return $.extend(true, data, this.handleSingletouchMove(e));\n        } else {\n            const pointerPos = this.getPointerArray();\n            return $.extend(true, data, this.handleMultitouchMove(pointerPos));\n        }\n    }\n\n    /**\n     * handle TouchEvent calculations for move\n     * @param  {Object} data - current data\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} manipulated enriched data\n     */\n    handleTouchEventMove(data, e) {\n        return this.handleTouchEvent(data, e, this.handleSingletouchMove.bind(this), this.handleMultitouchMove.bind(this));\n    }\n\n    handleTouchEvent(data, e, fnSingle, fnMulti) {\n        const getData = (e.length === 1) ? fnSingle(e[0]) : fnMulti(e);\n        return $.extend(true, data, getData);\n    }\n\n    /**\n     * handles multitouch for move\n     * @param  {Object} positionsArray - array of positions\n     * @return {Object} manipulated enriched data\n     */\n    handleMultitouchMove(positionsArray) {\n        const pointerPos1 = this.getRelativePosition(positionsArray[0]);\n        const pointerPos2 = this.getRelativePosition(positionsArray[1]);\n        const pos = pointerPos2.clone.add(pointerPos1).divide(2);\n        return {\n            position: {\n                move: pos\n            },\n            distance: pointerPos1.distance(pointerPos2),\n            multitouch: true\n        };\n    }\n\n    /**\n     * handles singletouch for move\n     * @param  {Point} position - position\n     * @return {Object} manipulated enriched data\n     */\n    handleSingletouchMove(position) {\n        const pos = this.getRelativePosition(position);\n        return {\n            position: {\n                move: pos\n            },\n            distance: this.data.last.position.distance(pos),\n            multitouch: false\n        };\n    }\n\n    /**\n     * handles cross-browser and -device move-event\n     * @param  {Object} event - jQuery-Event-Object\n     * @return {Boolean} always returns false\n     */\n    moveHandler(event) {\n        // if touchstart event was not fired\n        if (!this.data.down || this.data.pinched) return false;\n\n        const e = this.preHandle(event);\n        this.data.time.last = event.timeStamp;\n        this.data.last.position = (this.data.position.move) ? this.data.position.move : this.data.position.start;\n        this.data.time.last = (this.data.time.last) ? this.data.time.last : this.data.time.start;\n\n        // if positions have not changed\n        if (this.positionDidNotChange(e)) return false;\n\n        this.clearTimeouts(this.data.timeout.default);\n        this.clearTimeouts(this.data.timeout.hold);\n        this.data = $.extend(true, this.data, this.calculateMove(e));\n\n        if (this.data.multitouch) {\n            this.handlePinchAndZoom();\n        } else {\n            this.eventCallback(this.settings.callbacks.pan, this.dataClone);\n        }\n        return false;\n    }\n\n    /**\n     * handles pinch and zoom\n     * @return {Interact} instance of Interact for chaining\n     */\n    handlePinchAndZoom() {\n        if (!this.data.last.distance) this.data.last.distance = this.data.distance;\n\n        this.data.difference = this.data.distance - this.data.last.distance;\n        if (Math.abs(this.data.difference) >= 0.005) {\n            if (this.settings.callbacks.pinch) this.eventCallback(this.settings.callbacks.pinch, this.dataClone);\n            if (this.settings.callbacks.zoom) this.eventCallback(this.settings.callbacks.zoom, this.dataClone);\n            this.data.last.distance = this.data.distance;\n        }\n        return this;\n    }\n\n    /**\n     * check if position has been changed\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Boolean} Whether or not position has changed\n     */\n    positionDidNotChange(e) {\n        return Helper.isIE() && (this.getRelativePosition(e).equals(this.data.last.position) || this.getRelativePosition(e).equals(this.data.position.start)) || (!Helper.isIE() && Helper.isTouch() && this.getRelativePosition(e[0]).equals(this.data.last.position));\n    }\n\n    /**\n     * calculation to be made at end-handler\n     * @param  {Object} e - jQuery-Event-Object\n     * @return {Object} calculated data\n     */\n    calculateEnd(e) {\n        const data = {\n            position: {\n                end: new Point()\n            }\n        };\n\n        if (e instanceof MouseEvent && !this.isPointerEvent(e)) {\n            return $.extend(true, data, this.handleSingletouchEnd(e));\n        } // if is pointerEvent\n        if (this.isPointerEvent(e)) {\n            const end = this.handleSingletouchEnd(e);\n            delete this.data.pointerArray[e.pointerId];\n            return $.extend(true, data, end);\n        } // touch is used\n        else {\n            // singletouch ended\n            if (e.length <= 1) {\n                return $.extend(true, data,  this.handleSingletouchEnd(e[0]));\n            }\n        }\n    }\n\n    /**\n     * handles singletouch for end\n     * @param  {Object} position - position\n     * @return {Object} manipulated enriched data\n     */\n    handleSingletouchEnd(position) {\n        return {\n            position: {\n                end: this.getRelativePosition(position)\n            }\n        };\n    }\n\n    /**\n     * handle action at end event handler\n     * @param  {String} action - last action made\n     * @return {Interact} instance of Interact for chaining\n     */\n    takeActionEnd(action) {\n        switch (action) {\n            case \"tap\":\n                if (this.time < this.settings.timeTreshold.hold) {\n                    this.setTimeoutForEvent(this.settings.callbacks.tap, this.settings.timeTreshold.tap, this.dataClone);\n                } else {\n                    this.eventCallback(this.settings.callbacks.hold, this.dataClone);\n                }\n                break;\n            case \"doubletap\":\n                if (this.time < this.settings.timeTreshold.hold) {\n                    this.setTimeoutForEvent(this.settings.callbacks.doubletap, this.settings.timeTreshold.tap, this.dataClone);\n                } else {\n                    this.eventCallback(this.settings.callbacks.tapHold, this.dataClone);\n                }\n                break;\n            default:\n                this.data.last.action = null;\n        }\n    }\n\n    /**\n     * handles cross-browser and -device end-event\n     * @param  {Object} event - jQuery-Event-Object\n     * @return {Boolean} always returns false\n     */\n    endHandler(event) {\n\n        const e = this.preHandle(event);\n\n        this.data.time.end = event.timeStamp;\n\n        this.clearTimeouts(this.data.timeout.hold);\n\n        this.data = $.extend(true, this.data, this.calculateEnd(e));\n\n        // called only when not moved\n        if (!this.data.moved && this.data.down && !this.data.multitouch) {\n            this.takeActionEnd(this.data.last.action);\n        }\n        // if was moved\n        else if (this.data.moved && this.data.down && !this.data.multitouch) {\n            if (this.settings.callbacks.swipe || this.settings.callbacks.flick) {\n                this.handleSwipeAndFlick();\n            }\n            this.data.last.action = null;\n        }\n        this.pinchBalance();\n        this.handleMultitouchEnd(e);\n        this.data.last.position = null;\n        return false;\n    }\n\n    /**\n     * handles flick and swipe events\n     * @return {Interact} instance of Interact for chaining\n     */\n    handleSwipeAndFlick() {\n        const direction = this.data.position.end.clone.substract(this.data.last.position);\n\n        const vLDirection = direction.length,\n              directionNormalized = direction.divide(vLDirection, vLDirection);\n\n        if (this.settings.callbacks.swipe && this.time <= this.settings.timeTreshold.swipe) {\n            const originalStart = this.getAbsolutePosition(this.data.position.start);\n            const originalEnd = this.getAbsolutePosition(this.data.position.end);\n            if (originalEnd.distance(originalStart) >= this.settings.distanceTreshold.swipe) {\n                this.data.directions = this.getSwipeDirections(directionNormalized);\n                this.eventCallback(this.settings.callbacks.swipe, this.dataClone);\n            }\n        }\n\n        if (this.settings.callbacks.flick && (this.timeToLastMove <= this.settings.timeTreshold.flick)) {\n            const distance = this.data.last.position.distance(this.data.position.end);\n            this.data.distance = distance;\n            const direction = this.data.last.position.clone.substract(this.data.position.end);\n            this.data.directions = [direction.x, direction.y];\n            this.data.speed = this.calculateSpeed(distance, this.time);\n            if (this.data.speed >= this.settings.speedThreshold) {\n                this.eventCallback(this.settings.callbacks.flick, this.dataClone);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * handles multitouch for end\n     * @param  {e} e - jQuery-Event-Object\n     * @return {Interact} instance of Interact for chaining\n     */\n    handleMultitouchEnd(e) {\n        this.data.multitouch = false;\n        this.data.down = false;\n        this.data.moved = false;\n\n        // if is pointerEvent\n        if (this.isPointerEvent(e)) {\n            if (Object.keys(this.data.pointerArray).length > 1) {\n                this.data.multitouch = true;\n            } else if (Object.keys(this.data.pointerArray).length > 0) {\n                this.data.down = true;\n            }\n        } // touch is used\n        else {\n            if (e.length > 1) {\n                this.data.multitouch = true;\n            } else if (e.length > 0) {\n                this.data.down = true;\n            }\n            this.data.position.move = null;\n        }\n        return this;\n    }\n\n    /**\n     * balances pinching after release of finger\n     * @return {Interact} instance of Interact for chaining\n     */\n    pinchBalance() {\n        if (this.data.multitouch) {\n            this.data.pinched = true;\n            setTimeout((function() {\n                this.data.pinched = false;\n                this.data.last.distance = null;\n            }).bind(this), this.settings.pinchBalanceTime);\n        }\n        return this;\n    }\n\n    /**\n     * calculates the speed with specified distance and time\n     * @param  {number} distance - the specified distance\n     * @param  {number} time - the specified time elapsed\n     * @return {number} the calculated speed\n     */\n    calculateSpeed(distance, time) {\n        return (distance / (time || 0.00001)) * 100;\n    }\n\n    /**\n     * Returns an array of strings, representing the directions\n     * @param  {Point} direction - the specified direction in pixel\n     * @return {string[]} returns an array representing the directions as strings\n     */\n    getSwipeDirections(direction) {\n        return [(direction.x < 0) ? \"left\" : (direction.x > 0) ? \"right\" : \"none\", (direction.y < 0) ? \"up\" : (direction.y > 0) ? \"down\" : \"none\"];\n    }\n\n    /**\n     * Helper for setting a timeout for events\n     * @param {Function} callback - function to be called\n     * @param {number} timeout - time in milliseconds\n     * @param {Object[]} args - array of arguments\n     * @param {Boolean} holdTimeout - if true, a different variable will be used\n     * @return {Interact} Returns this instance\n     */\n    setTimeoutForEvent(callback, timeout, args, holdTimeout) {\n        if (holdTimeout) {\n            this.data.timeout.hold = setTimeout(this.eventCallback.bind(this, callback, args), timeout);\n        } else {\n            this.data.timeout.default = setTimeout(this.eventCallback.bind(this, callback, args), timeout);\n        }\n        return this;\n    }\n\n    /**\n     * Eventhandler for handling the callbacks\n     * @param  {Function} callback - function to be called\n     * @param  {object[]} args - arguments for the function\n     * @return {Interact} Returns this instance\n     */\n    eventCallback(callback, args) {\n        if (callback && typeof callback === \"function\") callback(args);\n        this.data.last.action = null;\n        return this;\n    }\n\n    /**\n     * get the relative position of clientX and clientY\n     * @param  {Object} e - event object\n     * @return {Point} calculated relative position\n     */\n    getRelativePosition(e) {\n        const clientBounds = this.container.getBoundingClientRect(),\n            pos = new Point(e.clientX, e.clientY),\n            bounds = new Point(clientBounds.left, clientBounds.top);\n        return pos.substract(bounds).divide(clientBounds.width, clientBounds.height);\n    }\n\n    /**\n     * get the absolute position of clientX and clientY\n     * @param  {Object} e - event object\n     * @return {Point} calculated absolute position\n     */\n    getAbsolutePosition(point) {\n        const clientBounds = this.container.getBoundingClientRect();\n        return point.mult(clientBounds.width, clientBounds.height);\n    }\n\n    /**\n     * get scroll direction from event\n     * @param  {Object} event - event object\n     * @return {string[]} an array with scroll directions\n     */\n    getScrollDirection(event) {\n        const axis = parseInt(event.axis, 10);\n        const direction = [];\n        if (this.isDownDirection(axis, event)) direction.push(\"down\"); // down\n        else if (this.isUpDirection(axis, event)) direction.push(\"up\"); // up\n        if (this.isRightDirection(axis, event)) direction.push(\"right\"); // right\n        else if (this.isLeftDirection(axis, event)) direction.push(\"left\"); // left\n        return direction;\n    }\n\n    /**\n     * checks if direction is down\n     * @param  {number} axis - what axis is used\n     * @param  {Object} event - Vanilla JS event\n     * @return {Boolean} Whether or not direction is down\n     */\n    isDownDirection(axis, event) {\n        return event.deltaY > 0 || (!event.deltaY && event.wheelDeltaY < 0) || ((axis === 2) && (event.detail > 0)) || (Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail))) < 0);\n    }\n\n    /**\n     * checks if direction is up\n     * @param  {number} axis - what axis is used\n     * @param  {Object} event - Vanilla JS event\n     * @return {Boolean} Whether or not direction is up\n     */\n    isUpDirection(axis, event) {\n        return event.deltaY < 0 || (!event.deltaY && event.wheelDeltaY > 0) || (axis === 2 && event.detail < 0) || (Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail))) > 0);\n    }\n\n    /**\n     * checks if direction is right\n     * @param  {number} axis - what axis is used\n     * @param  {Object} event - Vanilla JS event\n     * @return {Boolean} Whether or not direction is right\n     */\n    isRightDirection(axis, event) {\n        return event.deltaX > 0 || (!event.deltaX && event.wheelDeltaX > 0) || (axis === 1 && event.detail > 0);\n    }\n\n    /**\n     * checks if direction is left\n     * @param  {number} axis - what axis is used\n     * @param  {Object} event - Vanilla JS event\n     * @return {Boolean} Whether or not direction is left\n     */\n    isLeftDirection(axis, event) {\n        return event.deltaX < 0 || (!event.deltaX && event.wheelDeltaX < 0) || (axis === 1 && event.detail < 0);\n    }\n\n    /**\n     * Get event helper, applies jQuery-event-fix too\n     * @param  {Object} e - event object\n     * @return {Object} new fixed and optimized event\n     */\n    getEvent(e) {\n        jQuery.event.fix(e);\n        if (e.originalEvent.touches && e.originalEvent.touches.length === 0) {\n            return e.originalEvent.changedTouches || e.originalEvent;\n        }\n        return e.originalEvent.touches || e.originalEvent.changedTouches || e.originalEvent;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** plugin/src/js/Interact.js\n **/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AAMA;AACA;;;;;;;;;;;AAUA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA1BA;AAJA;AAiCA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;ACzUA;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;AAOA;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AACA;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAfA;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAPA;;;;;;;;;;;;;;;;;ACxFA;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AAAA;AAAA;;;;;;;AAOA;AAAA;AAAA;AACA;;;;;;;AAOA;AAAA;AAAA;AACA;;;;;;;AAOA;AAAA;AAAA;AACA;;;;;;;AAOA;AAAA;AAAA;AAzGA;;;;;;;;;;;;;;;;;;;;;;ACDA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;;;;;;;;;;;;;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC7IA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;;;;;;;;;;;;;AASA;AAAA;AAAA;;;;;;;;;;;;;;;ACzGA;AACA;;;;;;;;;AAMA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;AAWA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AAMA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAjBA;AAmBA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AA1BA;AA+BA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAKA;AACA;AACA;;;;;;;;AAKA;AACA;AAKA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;;AASA;AACA;AACA;;AAEA;AACA;AACA;AAFA;;AAIA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AACA;;;;;;;;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;","sourceRoot":""}